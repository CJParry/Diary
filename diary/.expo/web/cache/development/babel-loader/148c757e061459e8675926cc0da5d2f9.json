{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\chris\\\\diary\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Gallery from \"./pages/Gallery\";\nexport default function App() {\n  var tbs = createBottomTabNavigator();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      newTask = _useState2[0],\n      setnewTask = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      appTasks = _useState4[0],\n      appTask = _useState4[1];\n\n  var taskInputHandler = function taskInputHandler(enteredText) {\n    setnewTask(enteredText);\n  };\n\n  var addTaskHandler = function addTaskHandler() {\n    appTask(function (currentTask) {\n      return [].concat(_toConsumableArray(currentTask), [newTask]);\n    });\n    console.log(newTask);\n  };\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 8\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: Gallery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    borderColor: \"black\",\n    borderWidth: 1,\n    padding: 20\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignContent: 'center',\n    bottom: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/chris/diary/App.js"],"names":["StatusBar","React","useState","NavigationContainer","createBottomTabNavigator","Gallery","App","tbs","newTask","setnewTask","appTasks","appTask","taskInputHandler","enteredText","addTaskHandler","currentTask","console","log","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","input","borderColor","borderWidth","padding","inputContainer","flexDirection","alignContent","bottom"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,OAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAE5B,MAAMC,GAAG,GAAGH,wBAAwB,EAApC;;AAF4B,kBAIEF,QAAQ,CAAC,EAAD,CAJV;AAAA;AAAA,MAIrBM,OAJqB;AAAA,MAIZC,UAJY;;AAAA,mBAMAP,QAAQ,CAAC,EAAD,CANR;AAAA;AAAA,MAMrBQ,QANqB;AAAA,MAMXC,OANW;;AAQ5B,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,WAAD,EAAiB;AACxCJ,IAAAA,UAAU,CAACI,WAAD,CAAV;AACD,GAFD;;AAIA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAK;AAC1BH,IAAAA,OAAO,CAAC,UAAAI,WAAW;AAAA,0CAAQA,WAAR,IAAqBP,OAArB;AAAA,KAAZ,CAAP;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;AACD,GAHD;;AAKA,SAoBE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,GAAD,CAAK,SAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,SAAS,EAAEH,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CApBF;AA0BD;AAED,IAAMa,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAC,OADP;AAELC,IAAAA,WAAW,EAAC,CAFP;AAGLC,IAAAA,OAAO,EAAE;AAHJ,GAPwB;AAa/BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,aAAa,EAAE,KADD;AAEdN,IAAAA,cAAc,EAAE,eAFF;AAGdO,IAAAA,YAAY,EAAC,QAHC;AAIdC,IAAAA,MAAM,EAAC;AAJO;AAbe,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React , {useState} from 'react';\nimport { StyleSheet, Text, View, TextInput, Button } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Gallery from './pages/Gallery'\n \nexport default function App() {\n\n  const tbs = createBottomTabNavigator();\n \n  const [newTask, setnewTask] = useState('');\n \n  const [appTasks, appTask] = useState([]);\n \n  const taskInputHandler = (enteredText) => {\n    setnewTask(enteredText);\n  };\n \n  const addTaskHandler = () =>{\n    appTask(currentTask => [...currentTask, newTask]);\n    console.log(newTask);\n  };\n \n  return (\n    // <View style= {styles.container}>\n       \n    //   <View style = {styles.inputContainer}>\n       \n    //     <TextInput\n    //       placeholder = \"Task List\"\n    //       style = {styles.input}\n    //       onChangeText = {taskInputHandler}\n    //       value = {newTask}\n    //     />\n       \n    //     <Button title = \"+\"\n    //       onPress = {addTaskHandler}\n    //     /> \n    //   </View>\n    //   <View>\n    //     {appTasks.map((task) => <Text>{task}</Text>)}\n    //   </View>\n    // </View>\n    <NavigationContainer>\n       <Tab.Navigator>\n        <Tab.Screen name=\"Home\" component={Gallery} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n \nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  input :{\n    borderColor:\"black\", \n    borderWidth:1 , \n    padding :20,\n     \n  },\n  inputContainer :{\n    flexDirection :'row', \n    justifyContent :'space-between', \n    alignContent:'center',\n    bottom:20\n  },\n});"]},"metadata":{},"sourceType":"module"}